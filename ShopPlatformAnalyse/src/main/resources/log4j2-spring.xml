<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="WARN" monitorInterval="30">

	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<console name="Console" target="SYSTEM_OUT">
			<!--<JSONLayout compact="true" eventEol="true"/> -->
			<!--输出日志的格式 -->
			<!--格式我只用了取具体日志的格式，去掉了多余信息的显示，例如时间和类 -->
			<PatternLayout pattern="%m%n" />
		</console>

		<!--输出到flume -->
		<!--flume中XX.conf配置文件的type也要改为avro，其他的接收不到 -->
		<Flume name="flume" compress="false" type="Avro">
			<Agent host="virhost01" port="44444" />
			<PatternLayout pattern="%m" />
		</Flume>

		<!--输出到Kafka -->
		<Kafka name="KAFKA" topic="test01">
			<ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY" />
			<PatternLayout pattern="%m" />
			<Property name="bootstrap.servers">virhost01:9092</Property>
		</Kafka>
	</appenders>

	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<!--过滤掉spring和mybatis的一些无用的warn级别以下的信息 -->
		<!--因为接下来输出的日志信息设置为了warn级别，不想被以下的信息干扰 -->
		<logger name="org.springframework" level="warn"></logger>
		<logger name="org.mybatis" level="warn"></logger>
		<!--这里设置的是全局的日志显示级别 -->
		<root level="warn">
			<appender-ref ref="Console" />
			<!-- <appender-ref ref="flume" /> -->
			<appender-ref ref="KAFKA"/>
		</root>
	</loggers>

</configuration>